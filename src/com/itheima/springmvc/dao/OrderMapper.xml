<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itheima.springmvc.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.itheima.springmvc.pojo.Order" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_state" property="orderState" jdbcType="INTEGER" />
    <result column="order_price" property="orderPrice" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="transfer_fee" property="transferFee" jdbcType="DOUBLE" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="customer_address" property="customerAddress" jdbcType="VARCHAR" />
    <result column="seller_id" property="sellerId" jdbcType="INTEGER" />
    <!-- <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="goods_count" property="goodsCount" jdbcType="INTEGER" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="goods_price" property="goodsPrice" jdbcType="DOUBLE" /> -->
    <result column="belong" property="belong" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.itheima.springmvc.pojo.GoodsInfo" >
  	<id column="goodsInfo_id" property="goodsInfoId" jdbcType="INTEGER" />
  	<result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="goods_count" property="goodsCount" jdbcType="INTEGER" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="goods_price" property="goodsPrice" jdbcType="DOUBLE" />
    <result column="goods_pic" property="goodsPic" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, order_state, order_price, create_time, transfer_fee, remarks, customer_id, 
    customer_address, seller_id, belong
  </sql>
  <select id="getOrderDetail" parameterType="com.itheima.springmvc.pojo.Order" resultType="com.itheima.springmvc.pojo.Order">
  	select * from orders where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <select id="showShopOrderList" parameterType="com.itheima.springmvc.pojo.Shop" resultMap="BaseResultMap">
  	select * from orders where belong = #{shopId,jdbcType=INTEGER}
  </select>
  <select id="findOrderGoodsList" parameterType="com.itheima.springmvc.pojo.Order" resultMap="BaseResultMap2">
  	select * from goodsInfo where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <select id="showCustomerOrderList" parameterType="com.itheima.springmvc.pojo.Customer" resultMap="BaseResultMap">
  	select * from orders where customer_id = #{customer_id,jdbcType=INTEGER}
  </select>
  <update id="closeOrder" parameterType="com.itheima.springmvc.pojo.Order">
  	update orders set order_state = 1 where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="payMoney" parameterType="com.itheima.springmvc.pojo.Order">
  	update customer set account=account-#{orderPrice} where customer_id = #{customerId,jdbcType=INTEGER}
  </update>
  <update id="setPayOrderState" parameterType="com.itheima.springmvc.pojo.Order">
  	update orders set order_state = 2 where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <select id="selectStateOfOrder" parameterType="com.itheima.springmvc.pojo.Order" resultType="Integer">
  	select order_state from orders where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <update id="returnMoney" parameterType="com.itheima.springmvc.pojo.Order">
  	update customer set account=account+#{orderPrice} where customer_id = #{customerId,jdbcType=INTEGER}
  </update>
  <update id="refuseOrder" parameterType="com.itheima.springmvc.pojo.Order">
  	update orders set order_state=3 where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="setTransferringState" parameterType="com.itheima.springmvc.pojo.Order">
  	update orders set order_state=4 where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="setAgreeRefuseState" parameterType="com.itheima.springmvc.pojo.Order">
  	update orders set order_state=5 where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <delete id="deleteOrder" parameterType="com.itheima.springmvc.pojo.Order">
  	delete from orders where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <update id="completeOrder" parameterType="com.itheima.springmvc.pojo.Order">
  	update orders set order_state=6 where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <insert id="insertGoodsInfo" parameterType="com.itheima.springmvc.pojo.GoodsInfo">
  	insert into goodsInfo (goods_id,goods_name,goods_price,goods_count,order_id,goods_pic)
  	values (#{goodsId},#{goodsName},#{goodsPrice},#{goodsCount},#{orderId},#{goodsPic})
  </insert>
  <delete id="deleteGoodsListOfOrder" parameterType="com.itheima.springmvc.pojo.Order">
  	delete from goodsInfo where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.itheima.springmvc.pojo.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByExample" parameterType="com.itheima.springmvc.pojo.OrderExample" >
    delete from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itheima.springmvc.pojo.Order" >
    insert into order (order_id, order_state, order_price, 
      create_time, transfer_fee, remarks, 
      customer_id, customer_address, seller_id, 
      goods_id, goods_count, goods_name, 
      goods_price, belong)
    values (#{orderId,jdbcType=INTEGER}, #{orderState,jdbcType=INTEGER}, #{orderPrice,jdbcType=DOUBLE}, 
      #{createTime,jdbcType=VARCHAR}, #{transferFee,jdbcType=DOUBLE}, #{remarks,jdbcType=VARCHAR}, 
      #{customerId,jdbcType=INTEGER}, #{customerAddress,jdbcType=VARCHAR}, #{sellerId,jdbcType=INTEGER}, 
      #{goodsId,jdbcType=INTEGER}, #{goodsCount,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, 
      #{goodsPrice,jdbcType=DOUBLE}, #{belong,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="orderId" parameterType="com.itheima.springmvc.pojo.Order" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderState != null" >
        order_state,
      </if>
      <if test="orderPrice != null" >
        order_price,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="transferFee != null" >
        transfer_fee,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="customerAddress != null" >
        customer_address,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="belong != null" >
        belong,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderState != null" >
        #{orderState,jdbcType=INTEGER},
      </if>
      <if test="orderPrice != null" >
        #{orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="transferFee != null" >
        #{transferFee,jdbcType=DOUBLE},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="customerAddress != null" >
        #{customerAddress,jdbcType=VARCHAR},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="belong != null" >
        #{belong,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itheima.springmvc.pojo.OrderExample" resultType="java.lang.Integer" >
    select count(*) from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderState != null" >
        order_state = #{record.orderState,jdbcType=INTEGER},
      </if>
      <if test="record.orderPrice != null" >
        order_price = #{record.orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.transferFee != null" >
        transfer_fee = #{record.transferFee,jdbcType=DOUBLE},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null" >
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.customerAddress != null" >
        customer_address = #{record.customerAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerId != null" >
        seller_id = #{record.sellerId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsCount != null" >
        goods_count = #{record.goodsCount,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPrice != null" >
        goods_price = #{record.goodsPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.belong != null" >
        belong = #{record.belong,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order
    set order_id = #{record.orderId,jdbcType=INTEGER},
      order_state = #{record.orderState,jdbcType=INTEGER},
      order_price = #{record.orderPrice,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      transfer_fee = #{record.transferFee,jdbcType=DOUBLE},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      customer_address = #{record.customerAddress,jdbcType=VARCHAR},
      seller_id = #{record.sellerId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_count = #{record.goodsCount,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DOUBLE},
      belong = #{record.belong,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itheima.springmvc.pojo.Order" >
    update order
    <set >
      <if test="orderState != null" >
        order_state = #{orderState,jdbcType=INTEGER},
      </if>
      <if test="orderPrice != null" >
        order_price = #{orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="transferFee != null" >
        transfer_fee = #{transferFee,jdbcType=DOUBLE},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="customerAddress != null" >
        customer_address = #{customerAddress,jdbcType=VARCHAR},
      </if>
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsCount != null" >
        goods_count = #{goodsCount,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null" >
        goods_price = #{goodsPrice,jdbcType=DOUBLE},
      </if>
      <if test="belong != null" >
        belong = #{belong,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itheima.springmvc.pojo.Order" >
    update order
    set order_state = #{orderState,jdbcType=INTEGER},
      order_price = #{orderPrice,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=VARCHAR},
      transfer_fee = #{transferFee,jdbcType=DOUBLE},
      remarks = #{remarks,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=INTEGER},
      customer_address = #{customerAddress,jdbcType=VARCHAR},
      seller_id = #{sellerId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      goods_count = #{goodsCount,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=DOUBLE},
      belong = #{belong,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>