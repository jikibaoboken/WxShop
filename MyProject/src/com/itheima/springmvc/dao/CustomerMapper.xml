<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itheima.springmvc.dao.CustomerMapper" >
  <resultMap id="BaseResultMap" type="com.itheima.springmvc.pojo.Customer" >
    <id column="customer_id" property="customer_id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="mailbox" property="mailbox" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="account_createTime" property="account_createTime" jdbcType="VARCHAR" />
    <result column="cyberspace_avatar" property="cyberspace_avatar" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="DOUBLE"/>
    <result column="linkman" property="linkman" jdbcType="VARCHAR"/>
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.itheima.springmvc.pojo.CartItem">
  	<id column="cartItemId" property="cartItemId" jdbcType="INTEGER" />
    <result column="orderState" property="orderState" jdbcType="INTEGER" />
    <result column="orderPrice" property="orderPrice" jdbcType="DOUBLE" />
    <result column="createTime" property="createTime" jdbcType="VARCHAR" />
    <result column="transferFee" property="transferFee" jdbcType="DOUBLE" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="customerId" property="customerId" jdbcType="INTEGER" />
    <result column="customerAddress" property="customerAddress" jdbcType="VARCHAR" />
    <result column="sellerId" property="sellerId" jdbcType="INTEGER" />
    <!-- <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="goods_count" property="goodsCount" jdbcType="INTEGER" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="goods_price" property="goodsPrice" jdbcType="DOUBLE" /> -->
    <result column="belong" property="belong" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BaseResultMap3" type="com.itheima.springmvc.pojo.CartGoodsInfo" >
  	<id column="cartGoodsInfoId" property="cartGoodsInfoId" jdbcType="INTEGER" />
  	<result column="goodsId" property="goodsId" jdbcType="INTEGER" />
    <result column="goodsCount" property="goodsCount" jdbcType="INTEGER" />
    <result column="goodsName" property="goodsName" jdbcType="VARCHAR" />
    <result column="goodsPrice" property="goodsPrice" jdbcType="DOUBLE" />
    <result column="goodsPic" property="goodsPic" jdbcType="VARCHAR" />
    <result column="cartItemId" property="cartItemId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap type="com.itheima.springmvc.pojo.ShopItem" id="BaseResultMap4">
  	<id column="shopItemId" property="shopItemId" jdbcType="INTEGER" />
  	<result column="shopId" property="shopId" jdbcType="INTEGER" />
    <result column="customerId" property="customerId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    customer_id, username, password, mailbox, address, phone, sex, age, nickname, account_createTime, 
    cyberspace_avatar,account,linkman
  </sql>
  <select id="selectShopByShopId" parameterType="com.itheima.springmvc.pojo.ShopItem" resultType="com.itheima.springmvc.pojo.Shop">
  	select * from shop where shop_id = #{shopId,jdbcType=INTEGER}
  </select>
  <select id="showShopLikes" parameterType="com.itheima.springmvc.pojo.Customer" resultMap="BaseResultMap4">
  	select * from shopItem where customerId = #{customer_id,jdbcType=INTEGER}
  </select>
  <select id="selectCustomerByUserName" parameterType="String" resultType="com.itheima.springmvc.pojo.Customer">
  	select * from customer where username = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteOfUpdateCart" parameterType="Integer">
  	delete from cartItem where customerId = #{customerId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteGoodsOfUpdateCart" parameterType="Integer">
  	delete from cartGoodsInfo where customerId = #{customerId,jdbcType=INTEGER}
  </delete>
  <insert id="insertOfUpdateCart" parameterType="CartItem">
  	insert into cartItem ( orderState,orderPrice,createTime,transferFee,
  	remarks,customerId,customerAddress,sellerId,belong) 
  	values (#{orderState},#{orderPrice},#{createTime},#{transferFee},
  	#{remarks},#{customerId},#{customerAddress},#{sellerId},#{belong})
  </insert>
  <insert id="insertGoodsOfUpdateCart" parameterType="com.itheima.springmvc.pojo.CartGoodsInfo">
  	insert into cartGoodsInfo (goodsId,goodsName,goodsPrice,
  	goodsCount,goodsPic,customerId,shopId)
  	values (#{goodsId},#{goodsName},#{goodsPrice},
  	#{goodsCount},#{goodsPic},#{customerId},#{shopId})
  </insert>
  <select id="showCustomerCart" parameterType="com.itheima.springmvc.pojo.Customer" resultMap="BaseResultMap2">
  	select * from cartItem where customerId = #{customer_id,jdbcType=INTEGER}
  </select>
  <select id="findCartGoodsLsit" parameterType="com.itheima.springmvc.pojo.CartItem" resultMap="BaseResultMap3">
  	select * from cartGoodsInfo where customerId = #{customerId,jdbcType=INTEGER} and shopId = #{belong,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer
    where customer_id = #{customerId,jdbcType=INTEGER}
  </select>
  <select id="selectIdByUserName" resultType="Integer" parameterType="String">
  	select customer_id from customer where username=#{username,jdbcType=VARCHAR}
  </select>
  <select id="selectPasswordByUsername" resultType="String" parameterType="String">
  	select password from customer where username= #{username,jdbcType=VARCHAR}
  </select>
  <select id="selectItemsByCustomerId" parameterType="com.itheima.springmvc.pojo.Customer" resultMap="com.itheima.springmvc.dao.ItemMapper.BaseResultMap" >
  	select * from item where user_id = #{customer_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer
    where customer_id = #{customerId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.itheima.springmvc.pojo.Customer" useGeneratedKeys="true" keyProperty="customer_id" >
    insert into customer ( username, password, 
      mailbox, address, phone, 
      sex, age, nickname, account_createTime, 
      cyberspace_avatar, account,linkman)
    values ( #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{mailbox,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{age,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, #{account_createTime,jdbcType=VARCHAR}, 
      #{cyberspace_avatar,jdbcType=VARCHAR}, #{account, jdbcType=DOUBLE},#{linkman,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.itheima.springmvc.pojo.Customer" >
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="mailbox != null" >
        mailbox,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="accountCreatetime != null" >
        account_createTime,
      </if>
      <if test="cyberspaceAvatar != null" >
        cyberspace_avatar,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="linkman != null" >
        linkman,
      </if>
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mailbox != null" >
        #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="accountCreatetime != null" >
        #{accountCreatetime,jdbcType=VARCHAR},
      </if>
      <if test="cyberspaceAvatar != null" >
        #{cyberspaceAvatar,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=DOUBLE},
      </if>
      <if test="linkman != null" >
        #{linkman,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="recharge" parameterType="com.itheima.springmvc.pojo.Customer">
  	update customer set account=account+ #{account,jdbcType=DOUBLE} where customer_id= #{customer_id,jdbcType=DOUBLE}
  </update>
  <update id="updateByExampleSelective" parameterType="map" >
    update customer
    <set >
      <if test="record.customerId != null" >
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.mailbox != null" >
        mailbox = #{record.mailbox,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.accountCreatetime != null" >
        account_createTime = #{record.accountCreatetime,jdbcType=VARCHAR},
      </if>
      <if test="record.cyberspaceAvatar != null" >
        cyberspace_avatar = #{record.cyberspaceAvatar,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=DOUBLE},
      </if>
       <if test="record.linkman != null" >
        linkman = #{record.linkman,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update customer
    set customer_id = #{record.customerId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      mailbox = #{record.mailbox,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      age = #{record.age,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      account_createTime = #{record.accountCreatetime,jdbcType=VARCHAR},
      cyberspace_avatar = #{record.cyberspaceAvatar,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=DOUBLE}
      linkman = #{record.linkman,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="update" parameterType="com.itheima.springmvc.pojo.Customer" >
    update customer
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mailbox != null" >
        mailbox = #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="account_createTime != null" >
        account_createTime = #{account_createTime,jdbcType=VARCHAR},
      </if>
      <if test="cyberspace_avatar != null" >
        cyberspace_avatar = #{cyberspace_avatar,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=DOUBLE},
      </if>
      <if test="linkman != null" >
        linkman = #{linkman,jdbcType=VARCHAR},
      </if>
    </set>
    where customer_id = #{customer_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itheima.springmvc.pojo.Customer" >
    update customer
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      mailbox = #{mailbox,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      age = #{age,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=VARCHAR},
      account_createTime = #{accountCreatetime,jdbcType=VARCHAR},
      cyberspace_avatar = #{cyberspaceAvatar,jdbcType=VARCHAR},
      account = #{account,jdbcType=DOUBLE}
      linkman = #{linkman,jdbcType=VARCHAR}
    where customer_id = #{customerId,jdbcType=INTEGER}
  </update>
</mapper>